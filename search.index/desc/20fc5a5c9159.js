rd_("BcReturn id value present on databaseCdThe up method applies the operation to the database.0CaError type created from error raised by box error0CkReturns the application name associated with the migration.AjMigration application name01C`Return migration app name stored inside databaseCiModule for creating and running cli with help of migratorAfCreates a new migratorAlRun provided plan migrationsBdRun migration command line interface1DfThe <code>Info</code> trait provides database-agnostic methods for \xe2\x80\xa60ChStruct that determines the type of migration plan to \xe2\x80\xa60BlError type created from error raised by sqlx0CcThe down method reverts the operation, if possible.0BcSets the plan as a \xe2\x80\x9cfake\xe2\x80\x9d plan.AoReturns the argument unchanged.0000BaCalls <code>U::from(self)</code>.0000CmLock database while doing migrations so no two migrations \xe2\x80\xa6CgReturns the migration name, typically the file name \xe2\x80\xa6nMigration name01BlReturn migration name stored inside databaseClSyncs the applied migrations from an old migrator to the \xe2\x80\xa60ClModule which is used to sync a external migration schema \xe2\x80\xa6BlError enum to store different types of error0ChError type created from error raised by std input output0AhModule for library errorAfUnlock locked databaseDfThe <code>Migrate</code> trait defines methods to manage and apply \xe2\x80\xa60AaMessage for error0CnReturns the list of parent migrations that must be applied \xe2\x80\xa60BdMacro for vector of <code>Box</code>CnA struct that stores migration-related metadata, including \xe2\x80\xa60oMigrator moduleCfReturns the list of migrations that this migration \xe2\x80\xa60BhTrait representing a database migration.0CbTrait representing a database migration operation.0BeError generated during planning state0BkCreates a new plan to apply all migrations.CjIndicates whether the migration is atomic. By default, \xe2\x80\xa60CfMacro for implementing the Migration trait for the \xe2\x80\xa6DjModule for defining the <code>Migration</code> trait, which represents \xe2\x80\xa6CdModule for defining the <code>Operation</code> traitCmCreates a new plan to apply a specific migration by name. \xe2\x80\xa6CkIndicates whether the migration is virtual. By default, \xe2\x80\xa60BnReturns a reference to the list of migrations.0CjReturns the list of operations that make up the migration.0BlCreates a new plan to revert all migrations.ClReturns the list of migrations that should be run before \xe2\x80\xa60BkConfigures a schema for the migrator table.CjGet name of table which is used for storing migrations \xe2\x80\xa6CkTrait which is implemented for syncing a migration from \xe2\x80\xa6000CkCreates a new plan to apply a limited number of migrations.CnCreates a new plan to revert a specific migration by name. \xe2\x80\xa6AmReturn migration applied timeCdCreates a new plan to revert a limited number of \xe2\x80\xa6BhError when passed schema name is invalid0BhAdds a single migration to the migrator.0EaMacro for implementing the <code>migration</code> macro for the <code>Any</code>.DfParse <code>MigrationCommand</code> and run migration command line \xe2\x80\xa6ClLibrary to create sqlx migration using rust code instead \xe2\x80\xa6BjAdds a list of migrations to the migrator.0CfReturns a mutable reference to the list of migrations.0D`Indicates whether the <code>up</code> operation is destructible.0EcMacro for implementing the <code>migration</code> macro for the <code>MySql</code>.CkMigration command for performing rust based sqlx migrations0C`Configures a prefix for the migrator table name.EdMacro for implementing the <code>migration</code> macro for the <code>Sqlite</code>.DiThe <code>DatabaseOperation</code> trait defines a set of methods for \xe2\x80\xa6BbError when table prefix is invalid0CjReturns a list of applied migrations from the old migrator0EhMacro for implementing the <code>migration</code> macro for the <code>Postgres</code>\xe2\x80\xa6CgError when unsupported database is used as any database0ClError raised when two migration with same name are added \xe2\x80\xa60B`Error for irreversible operation0BdError when applied migrations exists0CfStruct representing a migration row from the database.CjError raised when virtual migration is invalid virtual \xe2\x80\xa60BcError for pending migration present0BjGenerate migration plan according to plan.0CiAdds a migration record to the migration table in the \xe2\x80\xa6CdEnsure migration table is created before running \xe2\x80\xa6CnRemoves a migration record from the migration table in the \xe2\x80\xa6BnDrop migration table if migration table existsCmFetches the list of applied migrations from the migration \xe2\x80\xa6")