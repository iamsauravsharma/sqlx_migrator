var searchIndex = JSON.parse('{\
"sqlx_migrator":{"doc":"Library to create sqlx migration using rust code instead …","t":[0,0,0,0,0,2,3,13,13,3,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,13,13,3,8,4,13,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,8,11,10],"n":["cli","error","migration","migrator","operation","sqlx","Apply","Apply","List","Revert","Revert","SubCommand","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","command","command","command_for_update","command_for_update","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","handle_subcommand","has_subcommand","into","into","into","run","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","AppNameRequired","Error","FailedToCreateMigrationPlan","IrreversibleOperation","PendingMigrationPresent","SqlxError","borrow","borrow_mut","fmt","fmt","from","from","into","provide","source","to_string","try_from","try_into","type_id","vzip","AppliedMigrationSqlRow","MigrationTrait","app","applied_time","borrow","borrow_mut","clone","clone_into","eq","eq","from","from_row","hash","id","into","is_atomic","name","operations","parents","replaces","run_before","to_owned","try_from","try_into","type_id","vzip","Apply","Full","Migrator","MigratorTrait","Plan","Revert","add_migration","add_migration_to_db_table","add_migration_to_db_table","add_migration_to_db_table","add_migration_to_db_table","add_migration_to_db_table","add_migrations","apply_all","apply_migration","borrow","borrow","borrow_mut","borrow_mut","delete_migration_from_db_table","delete_migration_from_db_table","delete_migration_from_db_table","delete_migration_from_db_table","delete_migration_from_db_table","ensure_migration_table_exists","ensure_migration_table_exists","ensure_migration_table_exists","ensure_migration_table_exists","ensure_migration_table_exists","fetch_applied_migration_from_db","fetch_applied_migration_from_db","fetch_applied_migration_from_db","fetch_applied_migration_from_db","fetch_applied_migration_from_db","fmt","from","from","generate_migration_plan","into","into","list_applied_migrations","migrations","migrations","migrations","migrations","migrations","migrations_mut","migrations_mut","migrations_mut","migrations_mut","migrations_mut","new","pool","pool","pool","pool","pool","revert_all","revert_migration","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","app","app","name","name","OperationTrait","down","up"],"q":["sqlx_migrator","","","","","","sqlx_migrator::cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sqlx_migrator::error","","","","","","","","","","","","","","","","","","","","sqlx_migrator::migration","","","","","","","","","","","","","","","","","","","","","","","","","","sqlx_migrator::migrator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sqlx_migrator::migrator::Plan","","","","sqlx_migrator::operation","",""],"d":["Module for creating and running cli with help of migrator","Module for library error","Module defining migration trait","migrator module","Operation module","","CLI struct for apply subcommand","Apply migrations","List migrations along with their status","CLI struct for revert subcommand","Revert migrations","Subcommand for sqlx migrator cli","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Handle all subcommand operations","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Run full cli by parsing args with help of migrator. If you …","","","","","","","","","","","","","","","","","","","Error when migration name is only present but not app name","Error enum to store different types of error","Error for failed to create migrations plan","Error for irreversible operation","Error for pending migration present","Error type created from error raised by sqlx","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Migration struct created from sql table. Struct contains 4 …","Trait for migration","Migration app name. Can be name of folder or library where …","Return migration applied time","","","","","","","Returns the argument unchanged.","","","Return id value present on database","Calls <code>U::from(self)</code>.","Whether migration is atomic or not. By default it is true","Migration name. Can be file name without extension","Operation performed for migration (create, drop, etc.)","Parents of migration (migrations that should be applied …","Replace certain migrations. If any one of listed migration …","Run before certain migration. This can be helpful in …","","","","","","Apply generation plan. Plan containing migrations which …","Full generation plan. Plan containing all migrations …","Migrator struct which store migrations graph and …","Migrator trait which needs to be implemented for supported …","Type of plan used to generate migrations","Revert generation plan. Plan containing migrations which …","Add single migration to migrator object","Add migration to migration table","","","","","Add vector of migrations to Migrator object","Apply missing migration","Apply given migration and add it to applied migration table","","","","","Delete migration from table","","","","","Ensure migration table is created before running …","","","","","List all applied migrations from database as struct","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Generate migration plan for according to plan type. …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","List all applied migrations. Returns a vector of migration","Return migrations","","","","","Return mutable reference of migrations","","","","","Create new migrator from pool","Return pool of database","","","","","Revert all applied migration from database","Revert provided migration and remove migration from table","","","","","","","","","Migration app name which migration needs to be applied","Migration app name which migration needs to be reverted","Migration name till which migration needs to be applied. …","Migration name till which migration needs to be reverted. …","Trait for operation","Down command to be executed during migration rollback. If …","Up command to be executed during migration apply"],"i":[0,0,0,0,0,0,0,2,2,0,2,0,5,6,5,6,2,2,2,5,6,2,5,6,5,6,5,6,2,5,6,2,5,6,2,5,6,2,5,6,5,6,2,2,2,5,6,0,2,5,6,2,5,6,2,5,6,2,5,6,2,5,6,2,5,6,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,25,22,22,22,22,22,25,22,22,22,25,22,22,25,25,25,25,25,25,22,22,22,22,22,37,37,0,0,0,37,12,12,33,33,33,33,12,12,12,33,37,33,37,12,33,33,33,33,12,33,33,33,33,12,33,33,33,33,37,33,37,12,33,37,12,12,33,33,33,33,12,33,33,33,33,33,12,33,33,33,33,12,12,33,37,33,37,33,37,33,37,40,41,40,41,0,28,28],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[2,3],4],[[5,3],4],[[6,3],4],[[]],[[]],[[]],[7,[[9,[2,8]]]],[7,[[9,[5,8]]]],[7,[[9,[6,8]]]],[7,[[9,[2,8]]]],[7,[[9,[5,8]]]],[7,[[9,[6,8]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[2,[13,[12]]],[[9,[14]]]],[15,16],[[]],[[]],[[]],[[[13,[12]]],[[9,[14]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],17],[[],17],[[],17],[[2,7],[[9,[8]]]],[[5,7],[[9,[8]]]],[[6,7],[[9,[8]]]],[[2,7],[[9,[8]]]],[[5,7],[[9,[8]]]],[[6,7],[[9,[8]]]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[14,3],4],[[14,3],4],[18,14],[[]],[[]],[19],[14,[[11,[20]]]],[[],21],[[],9],[[],9],[[],17],[[]],0,0,[[],15],[22,[[24,[23]]]],[[]],[[]],[22,22],[[]],[[25,25],16],[[22,13],16],[[]],[[],[[26,[22]]]],[25],[22,27],[[]],[[],16],[[],15],[[],[[29,[[13,[28]]]]]],[[],[[29,[[13,[25]]]]]],[[],[[29,[[13,[25]]]]]],[[],[[29,[[13,[25]]]]]],[[]],[[],9],[[],9],[[],17],[[]],0,0,0,0,0,0,[[[13,[25]]]],[13,[[31,[[13,[30]]]]]],[[[33,[32]],13],[[31,[[13,[30]]]]]],[[[33,[34]],13],[[31,[[13,[30]]]]]],[[[33,[35]],13],[[31,[[13,[30]]]]]],[[[33,[36]],13],[[31,[[13,[30]]]]]],[[[29,[[13,[25]]]]]],[[],[[31,[[13,[30]]]]]],[13,[[31,[[13,[30]]]]]],[[]],[[]],[[]],[[]],[13,[[31,[[13,[30]]]]]],[[[33,[34]],13],[[31,[[13,[30]]]]]],[[[33,[35]],13],[[31,[[13,[30]]]]]],[[[33,[36]],13],[[31,[[13,[30]]]]]],[[[33,[32]],13],[[31,[[13,[30]]]]]],[[],[[31,[[13,[30]]]]]],[[[33,[35]]],[[31,[[13,[30]]]]]],[[[33,[36]]],[[31,[[13,[30]]]]]],[[[33,[32]]],[[31,[[13,[30]]]]]],[[[33,[34]]],[[31,[[13,[30]]]]]],[[],[[31,[[13,[30]]]]]],[[[33,[34]]],[[31,[[13,[30]]]]]],[[[33,[36]]],[[31,[[13,[30]]]]]],[[[33,[35]]],[[31,[[13,[30]]]]]],[[[33,[32]]],[[31,[[13,[30]]]]]],[[37,3],4],[[]],[[]],[37,[[31,[[13,[30]]]]]],[[]],[[]],[[],[[31,[[13,[30]]]]]],[[],38],[[[33,[35]]],38],[[[33,[32]]],38],[[[33,[34]]],38],[[[33,[36]]],38],[[],38],[[[33,[35]]],38],[[[33,[34]]],38],[[[33,[36]]],38],[[[33,[32]]],38],[39,33],[[],39],[[[33,[35]]],39],[[[33,[34]]],39],[[[33,[32]]],39],[[[33,[36]]],39],[[],[[31,[[13,[30]]]]]],[13,[[31,[[13,[30]]]]]],[[],9],[[],9],[[],9],[[],9],[[],17],[[],17],[[]],[[]],0,0,0,0,0,[[],[[31,[[13,[30]]]]]],[[],[[31,[[13,[30]]]]]]],"p":[[3,"Command"],[4,"SubCommand"],[3,"Formatter"],[6,"Result"],[3,"Apply"],[3,"Revert"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[8,"MigratorTrait"],[3,"Box"],[4,"Error"],[15,"str"],[15,"bool"],[3,"TypeId"],[4,"Error"],[3,"Demand"],[8,"Error"],[3,"String"],[3,"AppliedMigrationSqlRow"],[3,"Utc"],[3,"DateTime"],[8,"MigrationTrait"],[6,"Result"],[15,"i32"],[8,"OperationTrait"],[3,"Vec"],[8,"Future"],[3,"Pin"],[3,"Any"],[3,"Migrator"],[3,"Sqlite"],[3,"Postgres"],[3,"MySql"],[4,"Plan"],[3,"HashSet"],[3,"Pool"],[13,"Apply"],[13,"Revert"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
