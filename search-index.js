var searchIndex = new Map(JSON.parse('[["sqlx_migrator",{"t":"EEEEEEEEQCCCQCQCQQQFNNNNNNNNNNNNNNNNNNNNPPGPPPPPPPPPPNNNNNNNNNNNNNNNOOOFKMNNNNNNNNNNNNNNNMMMNNNNNNNKKKFFNMNNNNNNNNNNNNNMNNNNMNNNNMNNNNNMNNNNNNNNNNMNNNNMNMNNNNNNNNNNNNNNNMNNNNNNKNNM","n":["Error","Info","Migrate","Migration","MigrationCommand","Migrator","Operation","Plan","any_migration","cli","error","migration","","migrator","mysql_migration","operation","postgres_migration","sqlite_migration","vec_box","MigrationCommand","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","parse_and_run","run","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","AppliedMigrationExists","Box","Error","InconsistentMigration","InvalidSchema","InvalidTablePrefix","InvalidVirtualMigration","IrreversibleOperation","PendingMigrationPresent","PlanError","Sqlx","StdIo","UnsupportedDatabase","borrow","borrow_mut","fmt","","from","","","","into","source","to_string","try_from","try_into","type_id","vzip","app","message","name","AppliedMigrationSqlRow","Migration","app","applied_time","borrow","borrow_mut","clone","clone_into","clone_to_uninit","eq","","from","from_row","hash","id","into","is_atomic","is_virtual","name","operations","parents","replaces","run_before","to_owned","try_from","try_into","type_id","vzip","DatabaseOperation","Info","Migrate","Migrator","Plan","add_migration","add_migration_to_db_table","","","","","add_migrations","apply_all","apply_count","apply_name","borrow","","borrow_mut","","default","delete_migration_from_db_table","","","","","drop_migration_table_if_exists","","","","","ensure_migration_table_exists","","","","","fake","fetch_applied_migration_from_db","","","","","fmt","from","","generate_migration_plan","into","","lock","","","","","migrations","","migrations_mut","","new","revert_all","revert_count","revert_name","run","set_schema","set_table_prefix","table_name","try_from","","try_into","","type_id","","unlock","","","","","vzip","","Operation","down","is_destructible","up"],"q":[[0,"sqlx_migrator"],[19,"sqlx_migrator::cli"],[40,"sqlx_migrator::error"],[68,"sqlx_migrator::error::Error"],[71,"sqlx_migrator::migration"],[99,"sqlx_migrator::migrator"],[176,"sqlx_migrator::operation"],[180,"clap_builder::builder::command"],[181,"core::fmt"],[182,"clap_builder::parser::matches::arg_matches"],[183,"clap_builder"],[184,"core::result"],[185,"clap_builder::util::id"],[186,"core::option"],[187,"alloc::boxed"],[188,"core::any"],[189,"core::error"],[190,"std::io::error"],[191,"sqlx_core::error"],[192,"alloc::string"],[193,"sqlx_core::row"],[194,"core::hash"],[195,"alloc::vec"],[196,"core::future::future"],[197,"core::pin"],[198,"sqlx_core::any::database"],[199,"sqlx_postgres::database"],[200,"sqlx_mysql::database"],[201,"sqlx_sqlite::database"],[202,"core::convert"]],"i":"````````````````````h0000000000000000000An0`0000000000000000000000000BjBl1``BnCb000001000100111111100000`````DdDfDn0002Ef0010101211112111121111021111010Ah21322224242211102222121213222221`D`00","f":"````````````````````{bb}0{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{}b}0{{{d{h}}{d{fj}}}l}{cc{}}{{{d{n}}}{{Ab{hA`}}}}{{{d{fn}}}{{Ab{hA`}}}}{{}{{Af{Ad}}}}{{}c{}}{{{d{f}}{Aj{Ah}}}{{Ab{AlAn}}}}{{{d{h}}{d{f}}{Aj{Ah}}}{{Ab{AlAn}}}}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{dB`}{{{d{fh}}{d{n}}}{{Ab{AlA`}}}}{{{d{fh}}{d{fn}}}{{Ab{AlA`}}}}{{}c{}}`````````````{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{An}}{d{fj}}}l}0{{{Aj{Bb}}}An}{BdAn}{cc{}}{BfAn}?{{{d{An}}}{{Af{{d{Bb}}}}}}{dBh}>=<9{BjBh}{BlBh}1``{{{d{Bn}}}{{d{C`}}}}{{{d{Cb}}}{{d{C`}}}}<;{{{d{Cb}}}Cb}{{d{d{fc}}}Al{}}{{dCd}Al}{{{d{Bn}}{d{Bn}}}Cf}{{{d{Cb}}{d{{Aj{Bn}}}}}Cf}<{{{d{c}}}{{Ch{Cb}}}Cj}{{{d{Bn}}{d{fc}}}AlCl}{{{d{Cb}}}Cn}{{}c{}}{{{d{Bn}}}Cf}0;{{{d{Bn}}}{{Db{{Aj{D`}}}}}}{{{d{Bn}}}{{Db{{Aj{Bn}}}}}}00{dc{}}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{dB`}{{}c{}}`````{{{d{fDd}}{Aj{Bn}}}{{Ab{AlAn}}}}{{{d{Df}}{d{f}}{d{{Aj{Bn}}}}}{{Dj{{Aj{Dh}}}}}}{{{d{{Dn{Dl}}}}{d{f}}{d{{Aj{Bn}}}}}{{Dj{{Aj{Dh}}}}}}{{{d{{Dn{E`}}}}{d{f}}{d{{Aj{Bn}}}}}{{Dj{{Aj{Dh}}}}}}{{{d{{Dn{Eb}}}}{d{f}}{d{{Aj{Bn}}}}}{{Dj{{Aj{Dh}}}}}}{{{d{{Dn{Ed}}}}{d{f}}{d{{Aj{Bn}}}}}{{Dj{{Aj{Dh}}}}}}{{{d{fDd}}{Db{{Aj{Bn}}}}}{{Ab{AlAn}}}}{{}Ef}{EhEf}{{{d{C`}}{d{{Af{Bh}}}}}Ef}{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{{}{{Dn{c}}}{}};:798{{{d{Df}}{d{f}}}{{Dj{{Aj{Dh}}}}}}{{{d{{Dn{E`}}}}{d{f}}}{{Dj{{Aj{Dh}}}}}}{{{d{{Dn{Ed}}}}{d{f}}}{{Dj{{Aj{Dh}}}}}}{{{d{{Dn{Eb}}}}{d{f}}}{{Dj{{Aj{Dh}}}}}}{{{d{{Dn{Dl}}}}{d{f}}}{{Dj{{Aj{Dh}}}}}}41230{{EfCf}Ef}51324{{{d{Ef}}{d{fj}}}l}{cc{}}0{{{d{Ah}}{d{f}}{Af{{d{Ef}}}}}{{Dj{{Aj{Dh}}}}}}{{}c{}}097856{{{d{Dd}}}{{d{{Db{{Aj{Bn}}}}}}}}{{{d{{Dn{c}}}}}{{d{{Db{{Aj{Bn}}}}}}}{}}{{{d{fDd}}}{{d{f{Db{{Aj{Bn}}}}}}}}{{{d{f{Dn{c}}}}}{{d{f{Db{{Aj{Bn}}}}}}}{}}>{{}Ef}{EhEf}{{{d{C`}}{d{{Af{Bh}}}}}Ef}{{{d{Ah}}{d{f}}{d{Ef}}}{{Dj{{Aj{Dh}}}}}}{{{Dn{c}}e}{{Ab{{Dn{c}}An}}}{}{{Ej{Bh}}}}0{{{d{{Dn{c}}}}}Bh{}}{c{{Ab{e}}}{}{}}0{{}{{Ab{c}}}{}}0{dB`}0{{{d{Df}}{d{f}}}{{Dj{{Aj{Dh}}}}}}{{{d{{Dn{Eb}}}}{d{f}}}{{Dj{{Aj{Dh}}}}}}{{{d{{Dn{Ed}}}}{d{f}}}{{Dj{{Aj{Dh}}}}}}{{{d{{Dn{Dl}}}}{d{f}}}{{Dj{{Aj{Dh}}}}}}{{{d{{Dn{E`}}}}{d{f}}}{{Dj{{Aj{Dh}}}}}}{{}c{}}0`{{{d{D`}}{d{f}}}{{Dj{{Aj{Dh}}}}}}{{{d{D`}}}Cf}1","D":"Jl","p":[[5,"Command",180],[1,"reference",null,null,1],[0,"mut"],[5,"MigrationCommand",19],[5,"Formatter",181],[8,"Result",181],[5,"ArgMatches",182],[8,"Error",183],[6,"Result",184,null,1],[5,"Id",185],[6,"Option",186,null,1],[10,"Migrate",99],[5,"Box",187,null,1],[1,"unit"],[6,"Error",40],[5,"TypeId",188],[10,"Error",189],[5,"Error",190],[6,"Error",191],[5,"String",192],[15,"InconsistentMigration",68],[15,"PlanError",68],[10,"Migration",71],[1,"str"],[5,"AppliedMigrationSqlRow",71],[1,"u8"],[1,"bool"],[8,"Result",191],[10,"Row",193],[10,"Hasher",194],[1,"i32"],[10,"Operation",176],[5,"Vec",195],[10,"Info",99],[10,"DatabaseOperation",99],[10,"Future",196,null,1],[5,"Pin",197],[5,"Any",198],[5,"Migrator",99],[5,"Postgres",199],[5,"MySql",200],[5,"Sqlite",201],[5,"Plan",99],[1,"usize"],[10,"Into",202,null,1]],"r":[[0,40],[1,99],[2,99],[3,71],[4,19],[5,99],[6,176],[7,99]],"b":[[55,"impl-Debug-for-Error"],[56,"impl-Display-for-Error"],[57,"impl-From%3CBox%3Cdyn+Error+%2B+Send+%2B+Sync%3E%3E-for-Error"],[58,"impl-From%3CError%3E-for-Error"],[60,"impl-From%3CError%3E-for-Error"],[106,"impl-DatabaseOperation%3CAny%3E-for-Migrator%3CAny%3E"],[107,"impl-DatabaseOperation%3CPostgres%3E-for-Migrator%3CPostgres%3E"],[108,"impl-DatabaseOperation%3CMySql%3E-for-Migrator%3CMySql%3E"],[109,"impl-DatabaseOperation%3CSqlite%3E-for-Migrator%3CSqlite%3E"],[120,"impl-DatabaseOperation%3CAny%3E-for-Migrator%3CAny%3E"],[121,"impl-DatabaseOperation%3CSqlite%3E-for-Migrator%3CSqlite%3E"],[122,"impl-DatabaseOperation%3CPostgres%3E-for-Migrator%3CPostgres%3E"],[123,"impl-DatabaseOperation%3CMySql%3E-for-Migrator%3CMySql%3E"],[125,"impl-DatabaseOperation%3CPostgres%3E-for-Migrator%3CPostgres%3E"],[126,"impl-DatabaseOperation%3CSqlite%3E-for-Migrator%3CSqlite%3E"],[127,"impl-DatabaseOperation%3CMySql%3E-for-Migrator%3CMySql%3E"],[128,"impl-DatabaseOperation%3CAny%3E-for-Migrator%3CAny%3E"],[130,"impl-DatabaseOperation%3CMySql%3E-for-Migrator%3CMySql%3E"],[131,"impl-DatabaseOperation%3CSqlite%3E-for-Migrator%3CSqlite%3E"],[132,"impl-DatabaseOperation%3CPostgres%3E-for-Migrator%3CPostgres%3E"],[133,"impl-DatabaseOperation%3CAny%3E-for-Migrator%3CAny%3E"],[136,"impl-DatabaseOperation%3CAny%3E-for-Migrator%3CAny%3E"],[137,"impl-DatabaseOperation%3CSqlite%3E-for-Migrator%3CSqlite%3E"],[138,"impl-DatabaseOperation%3CMySql%3E-for-Migrator%3CMySql%3E"],[139,"impl-DatabaseOperation%3CPostgres%3E-for-Migrator%3CPostgres%3E"],[147,"impl-DatabaseOperation%3CSqlite%3E-for-Migrator%3CSqlite%3E"],[148,"impl-DatabaseOperation%3CPostgres%3E-for-Migrator%3CPostgres%3E"],[149,"impl-DatabaseOperation%3CAny%3E-for-Migrator%3CAny%3E"],[150,"impl-DatabaseOperation%3CMySql%3E-for-Migrator%3CMySql%3E"],[170,"impl-DatabaseOperation%3CMySql%3E-for-Migrator%3CMySql%3E"],[171,"impl-DatabaseOperation%3CSqlite%3E-for-Migrator%3CSqlite%3E"],[172,"impl-DatabaseOperation%3CAny%3E-for-Migrator%3CAny%3E"],[173,"impl-DatabaseOperation%3CPostgres%3E-for-Migrator%3CPostgres%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAF4AFQABAAcAFQAGAB0AAgAjAAUANgAFAD0AAAA/AAUATAAGAFQAAQBfAAQAawADAHMABAB5AAMAfgADAIMAAwCJAAQAlAADAJkAAACbAAAApAAFAKsABQA=","P":[[22,"T"],[24,""],[27,"T"],[28,""],[31,"U"],[32,""],[34,"U,T"],[35,"U"],[36,""],[39,"V"],[53,"T"],[55,""],[59,"T"],[60,""],[61,"U"],[62,""],[64,"U,T"],[65,"U"],[66,""],[67,"V"],[68,""],[75,"T"],[77,""],[78,"T"],[79,""],[82,"T"],[83,"R"],[84,"H"],[85,""],[86,"U"],[87,""],[94,"T"],[95,"U,T"],[96,"U"],[97,""],[98,"V"],[104,""],[114,"T"],[118,"DB"],[119,""],[141,"T"],[143,""],[144,"U"],[146,""],[152,"DB"],[153,""],[154,"DB"],[156,""],[160,"DB"],[163,"U,T"],[165,"U"],[167,""],[174,"V"],[177,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[8801]}