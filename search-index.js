var searchIndex = new Map(JSON.parse('[["sqlx_migrator",{"t":"EEEEEEEEQCCCQCQCQQQFNNNNNNNNNNNNNNNNNNNNPPGPPPPPPPPPNNNNNNNNNNNNNNNOOOFKMNNNNNNNNNNNNNNNMMMNNNNNNNKKKFFNMNNNNNNNNNNNNNMNNNNMNNNNMNNNNNMNNNNNNNNNNMNNNNMNMNNNNNNNNNNNNNMNNNNNNNKNNM","n":["Error","Info","Migrate","Migration","MigrationCommand","Migrator","Operation","Plan","any_migration","cli","error","migration","","migrator","mysql_migration","operation","postgres_migration","sqlite_migration","vec_box","MigrationCommand","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","parse_and_run","run","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","AppliedMigrationExists","Box","Error","InconsistentMigration","InvalidVirtualMigration","IrreversibleOperation","NonAsciiAlphaNumeric","PendingMigrationPresent","PlanError","Sqlx","StdIo","UnsupportedDatabase","borrow","borrow_mut","fmt","","from","","","","into","source","to_string","try_from","try_into","type_id","vzip","app","message","name","AppliedMigrationSqlRow","Migration","app","applied_time","borrow","borrow_mut","clone","clone_into","clone_to_uninit","eq","","from","from_row","hash","id","into","is_atomic","is_virtual","name","operations","parents","replaces","run_before","to_owned","try_from","try_into","type_id","vzip","DatabaseOperation","Info","Migrate","Migrator","Plan","add_migration","add_migration_to_db_table","","","","","add_migrations","apply_all","apply_count","apply_name","borrow","","borrow_mut","","default","delete_migration_from_db_table","","","","","drop_migration_table_if_exists","","","","","ensure_migration_table_exists","","","","","fake","fetch_applied_migration_from_db","","","","","fmt","from","","generate_migration_plan","into","","lock","","","","","migrations","","migrations_mut","","new","revert_all","revert_count","revert_name","run","table_name","try_from","","try_into","","type_id","","unlock","","","","","vzip","","with_prefix","Operation","down","is_destructible","up"],"q":[[0,"sqlx_migrator"],[19,"sqlx_migrator::cli"],[40,"sqlx_migrator::error"],[67,"sqlx_migrator::error::Error"],[70,"sqlx_migrator::migration"],[98,"sqlx_migrator::migrator"],[174,"sqlx_migrator::operation"],[178,"clap_builder::builder::command"],[179,"core::fmt"],[180,"clap_builder::parser::matches::arg_matches"],[181,"clap_builder"],[182,"core::result"],[183,"clap_builder::util::id"],[184,"core::option"],[185,"alloc::boxed"],[186,"core::any"],[187,"core::error"],[188,"sqlx_core::error"],[189,"std::io::error"],[190,"alloc::string"],[191,"sqlx_core::row"],[192,"core::hash"],[193,"alloc::vec"],[194,"core::future::future"],[195,"core::pin"],[196,"sqlx_mysql::database"],[197,"sqlx_sqlite::database"],[198,"sqlx_postgres::database"],[199,"sqlx_core::any::database"],[200,"core::convert"]],"i":"````````````````````h0000000000000000000An0`000000000000000000000000BjBl1``BnCb000001000100111111100000`````DdDfDn0002Ef0010101211112111121111021111010Ah2132222424221110221212132222212`D`00","f":"````````````````````{bb}0{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{}b}0{{{d{h}}{d{fj}}}l}{cc{}}{{{d{n}}}{{Ab{hA`}}}}{{{d{fn}}}{{Ab{hA`}}}}{{}{{Af{Ad}}}}{{}c{}}{{{d{f}}{Aj{Ah}}}{{Ab{AlAn}}}}{{{d{h}}{d{f}}{Aj{Ah}}}{{Ab{AlAn}}}}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{dB`}{{{d{fh}}{d{n}}}{{Ab{AlA`}}}}{{{d{fh}}{d{fn}}}{{Ab{AlA`}}}}{{}c{}}````````````{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{An}}{d{fj}}}l}0{{{Aj{Bb}}}An}{BdAn}{BfAn}{cc{}}?{{{d{An}}}{{Af{{d{Bb}}}}}}{dBh}>=<9{BjBh}{BlBh}1``{{{d{Bn}}}{{d{C`}}}}{{{d{Cb}}}{{d{C`}}}}<;{{{d{Cb}}}Cb}{{d{d{fc}}}Al{}}{{dCd}Al}{{{d{Bn}}{d{Bn}}}Cf}{{{d{Cb}}{d{{Aj{Bn}}}}}Cf};{{{d{c}}}{{Ch{Cb}}}Cj}{{{d{Bn}}{d{fc}}}AlCl}{{{d{Cb}}}Cn}{{}c{}}{{{d{Bn}}}Cf}0;{{{d{Bn}}}{{Db{{Aj{D`}}}}}}{{{d{Bn}}}{{Db{{Aj{Bn}}}}}}00{dc{}}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{dB`}{{}c{}}`````{{{d{fDd}}{Aj{Bn}}}{{Ab{AlAn}}}}{{{d{Df}}{d{f}}{d{{Aj{Bn}}}}}{{Dj{{Aj{Dh}}}}}}{{{d{{Dn{Dl}}}}{d{f}}{d{{Aj{Bn}}}}}{{Dj{{Aj{Dh}}}}}}{{{d{{Dn{E`}}}}{d{f}}{d{{Aj{Bn}}}}}{{Dj{{Aj{Dh}}}}}}{{{d{{Dn{Eb}}}}{d{f}}{d{{Aj{Bn}}}}}{{Dj{{Aj{Dh}}}}}}{{{d{{Dn{Ed}}}}{d{f}}{d{{Aj{Bn}}}}}{{Dj{{Aj{Dh}}}}}}{{{d{fDd}}{Db{{Aj{Bn}}}}}{{Ab{AlAn}}}}{{}Ef}{EhEf}{{{d{C`}}{d{{Af{Bh}}}}}Ef}{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{{}{{Dn{c}}}{}};:879{{{d{Df}}{d{f}}}{{Dj{{Aj{Dh}}}}}}{{{d{{Dn{Eb}}}}{d{f}}}{{Dj{{Aj{Dh}}}}}}{{{d{{Dn{Dl}}}}{d{f}}}{{Dj{{Aj{Dh}}}}}}{{{d{{Dn{E`}}}}{d{f}}}{{Dj{{Aj{Dh}}}}}}{{{d{{Dn{Ed}}}}{d{f}}}{{Dj{{Aj{Dh}}}}}}43012{{EfCf}Ef}51324{{{d{Ef}}{d{fj}}}l}{cc{}}0{{{d{Ah}}{d{f}}{Af{{d{Ef}}}}}{{Dj{{Aj{Dh}}}}}}{{}c{}}098657{{{d{Dd}}}{{d{{Db{{Aj{Bn}}}}}}}}{{{d{{Dn{c}}}}}{{d{{Db{{Aj{Bn}}}}}}}{}}{{{d{fDd}}}{{d{f{Db{{Aj{Bn}}}}}}}}{{{d{f{Dn{c}}}}}{{d{f{Db{{Aj{Bn}}}}}}}{}}>{{}Ef}{EhEf}{{{d{C`}}{d{{Af{Bh}}}}}Ef}{{{d{Ah}}{d{f}}{d{Ef}}}{{Dj{{Aj{Dh}}}}}}{{{d{{Dn{c}}}}}{{d{C`}}}{}}{c{{Ab{e}}}{}{}}0{{}{{Ab{c}}}{}}0{dB`}0{{{d{Df}}{d{f}}}{{Dj{{Aj{Dh}}}}}}{{{d{{Dn{E`}}}}{d{f}}}{{Dj{{Aj{Dh}}}}}}{{{d{{Dn{Dl}}}}{d{f}}}{{Dj{{Aj{Dh}}}}}}{{{d{{Dn{Eb}}}}{d{f}}}{{Dj{{Aj{Dh}}}}}}{{{d{{Dn{Ed}}}}{d{f}}}{{Dj{{Aj{Dh}}}}}}{{}c{}}0{{{Dn{c}}e}{{Ab{{Dn{c}}An}}}{}{{Ej{Bh}}}}`{{{d{D`}}{d{f}}}{{Dj{{Aj{Dh}}}}}}{{{d{D`}}}Cf}1","D":"Jh","p":[[5,"Command",178],[1,"reference",null,null,1],[0,"mut"],[5,"MigrationCommand",19],[5,"Formatter",179],[8,"Result",179],[5,"ArgMatches",180],[8,"Error",181],[6,"Result",182,null,1],[5,"Id",183],[6,"Option",184,null,1],[10,"Migrate",98],[5,"Box",185,null,1],[1,"unit"],[6,"Error",40],[5,"TypeId",186],[10,"Error",187],[6,"Error",188],[5,"Error",189],[5,"String",190],[15,"InconsistentMigration",67],[15,"PlanError",67],[10,"Migration",70],[1,"str"],[5,"AppliedMigrationSqlRow",70],[1,"u8"],[1,"bool"],[8,"Result",188],[10,"Row",191],[10,"Hasher",192],[1,"i32"],[10,"Operation",174],[5,"Vec",193],[10,"Info",98],[10,"DatabaseOperation",98],[10,"Future",194,null,1],[5,"Pin",195],[5,"MySql",196],[5,"Migrator",98],[5,"Sqlite",197],[5,"Postgres",198],[5,"Any",199],[5,"Plan",98],[1,"usize"],[10,"Into",200,null,1]],"r":[[0,40],[1,98],[2,98],[3,70],[4,19],[5,98],[6,174],[7,98]],"b":[[54,"impl-Debug-for-Error"],[55,"impl-Display-for-Error"],[56,"impl-From%3CBox%3Cdyn+Error+%2B+Send+%2B+Sync%3E%3E-for-Error"],[57,"impl-From%3CError%3E-for-Error"],[58,"impl-From%3CError%3E-for-Error"],[105,"impl-DatabaseOperation%3CMySql%3E-for-Migrator%3CMySql%3E"],[106,"impl-DatabaseOperation%3CSqlite%3E-for-Migrator%3CSqlite%3E"],[107,"impl-DatabaseOperation%3CPostgres%3E-for-Migrator%3CPostgres%3E"],[108,"impl-DatabaseOperation%3CAny%3E-for-Migrator%3CAny%3E"],[119,"impl-DatabaseOperation%3CMySql%3E-for-Migrator%3CMySql%3E"],[120,"impl-DatabaseOperation%3CPostgres%3E-for-Migrator%3CPostgres%3E"],[121,"impl-DatabaseOperation%3CAny%3E-for-Migrator%3CAny%3E"],[122,"impl-DatabaseOperation%3CSqlite%3E-for-Migrator%3CSqlite%3E"],[124,"impl-DatabaseOperation%3CPostgres%3E-for-Migrator%3CPostgres%3E"],[125,"impl-DatabaseOperation%3CMySql%3E-for-Migrator%3CMySql%3E"],[126,"impl-DatabaseOperation%3CSqlite%3E-for-Migrator%3CSqlite%3E"],[127,"impl-DatabaseOperation%3CAny%3E-for-Migrator%3CAny%3E"],[129,"impl-DatabaseOperation%3CPostgres%3E-for-Migrator%3CPostgres%3E"],[130,"impl-DatabaseOperation%3CAny%3E-for-Migrator%3CAny%3E"],[131,"impl-DatabaseOperation%3CSqlite%3E-for-Migrator%3CSqlite%3E"],[132,"impl-DatabaseOperation%3CMySql%3E-for-Migrator%3CMySql%3E"],[135,"impl-DatabaseOperation%3CAny%3E-for-Migrator%3CAny%3E"],[136,"impl-DatabaseOperation%3CMySql%3E-for-Migrator%3CMySql%3E"],[137,"impl-DatabaseOperation%3CSqlite%3E-for-Migrator%3CSqlite%3E"],[138,"impl-DatabaseOperation%3CPostgres%3E-for-Migrator%3CPostgres%3E"],[146,"impl-DatabaseOperation%3CPostgres%3E-for-Migrator%3CPostgres%3E"],[147,"impl-DatabaseOperation%3CSqlite%3E-for-Migrator%3CSqlite%3E"],[148,"impl-DatabaseOperation%3CAny%3E-for-Migrator%3CAny%3E"],[149,"impl-DatabaseOperation%3CMySql%3E-for-Migrator%3CMySql%3E"],[167,"impl-DatabaseOperation%3CSqlite%3E-for-Migrator%3CSqlite%3E"],[168,"impl-DatabaseOperation%3CMySql%3E-for-Migrator%3CMySql%3E"],[169,"impl-DatabaseOperation%3CPostgres%3E-for-Migrator%3CPostgres%3E"],[170,"impl-DatabaseOperation%3CAny%3E-for-Migrator%3CAny%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAF4AFAABAAcAFQAGAB0AAgAjAAUANQAGAD4ABQBLAAYAUwABAF4ABABqAAMAcgAEAHgAAwB9AAMAggADAIgABACTAAMAmAAAAJoAAAChAAUAqAAFAA==","P":[[22,"T"],[24,""],[27,"T"],[28,""],[31,"U"],[32,""],[34,"U,T"],[35,"U"],[36,""],[39,"V"],[52,"T"],[54,""],[59,"T"],[60,"U"],[61,""],[63,"U,T"],[64,"U"],[65,""],[66,"V"],[67,""],[74,"T"],[76,""],[77,"T"],[78,""],[81,"T"],[82,"R"],[83,"H"],[84,""],[85,"U"],[86,""],[93,"T"],[94,"U,T"],[95,"U"],[96,""],[97,"V"],[103,""],[113,"T"],[117,"DB"],[118,""],[140,"T"],[142,""],[143,"U"],[145,""],[151,"DB"],[152,""],[153,"DB"],[155,""],[159,"DB"],[160,"U,T"],[162,"U"],[164,""],[171,"V"],[173,"DB,"],[175,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[8770]}